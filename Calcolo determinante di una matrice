# -*- coding: utf-8 -*-
"""
Funzione che calcola il determinante attraverso la regola di Laplace.

Il teorema di Laplance permette di calcolare il determinante di una matrice quadrata attraverso formule ricorsive, dette sviluppo di Laplace, che possono essere applicate per righe (come nel nostro caso) o per colonne.

INPUT
A=matrice reale

OUTPUT
det=intero corrispondete al determinante della matrice A

"""

import numpy as np

def laplance(A):
  (m, n) = A.shape
  if m != n:
    print("Impossibile usare la regola di Laplace: A non e' quadrata")
    return
  if n == 1:
    return A
  else:
    d = 0
    for j in range(0, n):
      temp = np.delete(A, 0, axis=0)
      temp = np.delete(temp, j, axis=1)
      d = d + (-1)**(1 + (j + 1)) * A[0, j] * laplance(temp)
    return d

def test():

  A = np.array([[2, -1, 0], [1, 1, 1], [0, 1, -1]])
  print("Esempio 1:\n",A,"\n")
  Det = laplance(A)
  print("Il determinante calcolato è:\n", Det)
  det = np.linalg.det(A)
  print("Il determinante della funzione di libreria è\n", det)

  B = np.array([[2, -1, 0], [1, 1, 1]])
  print("\nEsempio 2:\n",B,"\n")
  Det = laplance(B)
  if (Det!=None):
     print("Il determinante calcolato è:\n", Det)
     det = np.linalg.det(B)
     print("Il determinante della libreria è\n", det)

  C = np.array([[2]])
  print("\nEsempio 2:\n",C,"\n")
  Det = laplance(C)
  if (Det!=None):
     print("Il determinante calcolato è:\n", Det)
     det = np.linalg.det(C)
     print("Il determinante della libreria è\n", det)

  D = np.array([[2, -1, 0], [0, 0, 0], [0, 1, -1]])
  print("\nEsempio3:\n",D,"\n")
  Det = laplance(D)
  if (Det!=None):
     print("Il determinante calcolato è:\n", Det)
     det = np.linalg.det(D)
     print("Il determinante della libreria è\n", det)
  


test()
